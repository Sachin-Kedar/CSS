/* 
    
The CSS font-family Property: 
    In CSS, we use the font-family property to specify the font of a text.

    Note: If the font name is more than one word, it must be in quotation marks, like: "Times New Roman".

    Tip: The font-family property should hold several font names as a "fallback" system, to ensure maximum compatibility between browsers/operating systems. Start with the font you want, and end with a generic family (to let the browser pick a similar font in the generic family, if no other fonts are available). The font names should be separated with a comma. Read more about fallback fonts in the next chapter.

    Example
    Specify some different fonts for three paragraphs: */

.p1 {
  font-family: "Times New Roman", Times, serif;
}

/* 
Font Style: 
    The font-style property is mostly used to specify italic text.

    This property has three values:

    normal - The text is shown normally
    italic - The text is shown in italics
    oblique - The text is "leaning" (oblique is very similar to italic, but less supported)
    Example */

p.normal {
  font-style: normal;
}

/* 
Font Weight: 
    The font-weight property specifies the weight of a font:

    Example */
p.normal {
  font-weight: normal;
}

p.thick {
  font-weight: bold;
}

/* 
Font Variant: 
    The font-variant property specifies whether or not a text should be displayed in a small-caps font.

    In a small-caps font, all lowercase letters are converted to uppercase letters. However, the converted uppercase letters appears in a smaller font size than the original uppercase letters in the text.

    Example */
p.normal {
  font-variant: normal;
}

p.small {
  font-variant: small-caps;
}

/* 
    
Font Size: 
    The font-size property sets the size of the text.

    The font-size value can be an absolute, or relative size.

    Absolute size:
        Sets the text to a specified size
        Does not allow a user to change the text size in all browsers (bad for accessibility reasons)
        Absolute size is useful when the physical size of the output is known
    
    Relative size:
        Sets the size relative to surrounding elements
        Allows a user to change the text size in browsers 

    Set Font Size With Pixels: 
        Setting the text size with pixels gives you full control over the text size:
        
        Example*/
h1 {
  font-size: 40px;
}

/* 
    Set Font Size With Em: 
        To allow users to resize the text (in the browser menu), many developers use em instead of pixels.

        1em is equal to the current font size. The default text size in browsers is 16px. So, the default size of 1em is 16px.

        The size can be calculated from pixels to em using this formula: pixels/16=em

        Example */

h2 {
  font-size: 1.875em; /* 30px/16=1.875em */
}

p {
  font-size: 0.875em; /* 14px/16=0.875em */
}

/* 
    Responsive Font Size:
        The text size can be set with a vw unit, which means the "viewport width".

        That way the text size will follow the size of the browser window:

        Hello World
        Resize the browser window to see how the font size scales.

        Example */

h3 {
  font-size: 10vw;
}
/* Viewport is the browser window size. 1vw = 1% of viewport width. If the viewport is 50cm wide, 1vw is 0.5cm.  */

/* 
    The CSS Font Property: 
        To shorten the code, it is also possible to specify all the individual font properties in one property.
        
        The font property is a shorthand property for:
        
        font-style
        font-variant
        font-weight
        font-size/line-height
        font-family
        Note: The font-size and font-family values are required. If one of the other values is missing, their default value are used.
        
        Example
        Use font to set several font properties in one declaration:
         */
p.a {
  font: 20px Arial, sans-serif;
}

p.b {
  font: italic small-caps bold 12px/30px Georgia, serif;
}
